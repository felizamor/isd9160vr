<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\VR\OneCommand.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\VR\OneCommand.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5040049: Last Updated: Thu May 12 14:30:01 2016
<BR><P>
<H3>Maximum Stack Usage =        752 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
Default_KeyHandler &rArr; PowerDown_KeypadHandler &rArr; App_PowerDown &rArr; App_StartRecognize &rArr; VROneCmdApp_Initiate &rArr; CSpotter_Init_Sep &rArr; CSpotter_Init_Multi &rArr; NINJA_API_9 &rArr; BsrRay &rArr; BsrDina &rArr; BsrJami &rArr; BsrJose
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[25]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">NMI_Handler</a><BR>
 <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[a]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SysTick_Handler</a><BR>
 <LI><a href="#[12]">Default_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">Default_Handler</a><BR>
 <LI><a href="#[8b]">BsrJake</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8b]">BsrJake</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[19]">ACMP_IRQHandler</a> from startup_n575_keil.o(.text) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[1d]">ADC_IRQHandler</a> from startup_n575_keil.o(.text) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[10]">ALC_IRQHandler</a> from startup_n575_keil.o(.text) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[b]">BOD_IRQHandler</a> from startup_n575_keil.o(.text) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[1c]">CAPS_IRQHandler</a> from interrupthandler.o(i.CAPS_IRQHandler) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[12]">Default_Handler</a> from startup_n575_keil.o(.text) referenced 13 times from startup_n575_keil.o(RESET)
 <LI><a href="#[22]">Default_KeyHandler</a> from inputkeyactions.o(i.Default_KeyHandler) referenced 18 times from configio.o(.constdata)
 <LI><a href="#[d]">EINT0_IRQHandler</a> from startup_n575_keil.o(.text) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[e]">EINT1_IRQHandler</a> from startup_n575_keil.o(.text) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[f]">GPAB_IRQHandler</a> from interrupthandler.o(i.GPAB_IRQHandler) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from startup_n575_keil.o(.text) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[17]">I2C0_IRQHandler</a> from startup_n575_keil.o(.text) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[1b]">I2S_IRQHandler</a> from startup_n575_keil.o(.text) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from startup_n575_keil.o(.text) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[1a]">PDMA_IRQHandler</a> from interrupthandler.o(i.PDMA_IRQHandler) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[11]">PWM0_IRQHandler</a> from startup_n575_keil.o(.text) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_n575_keil.o(.text) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[1e]">RTC_IRQHandler</a> from interrupthandler.o(i.RTC_IRQHandler) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[23]">Reset_Handler</a> from startup_n575_keil.o(.text) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[16]">SPI0_IRQHandler</a> from startup_n575_keil.o(.text) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[20]">SPIFlash_ReadDataCallback</a> from appcallback.o(i.SPIFlash_ReadDataCallback) referenced from appcallback.o(.constdata)
 <LI><a href="#[8]">SVC_Handler</a> from startup_n575_keil.o(.text) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from startup_n575_keil.o(.text) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[18]">TALARM_IRQHandler</a> from startup_n575_keil.o(.text) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[13]">TMR0_IRQHandler</a> from interrupthandler.o(i.TMR0_IRQHandler) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[14]">TMR1_IRQHandler</a> from interrupthandler.o(i.TMR1_IRQHandler) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[15]">UART0_IRQHandler</a> from startup_n575_keil.o(.text) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[21]">UserEvent_ProcessCallback</a> from appcallback.o(i.UserEvent_ProcessCallback) referenced from appcallback.o(.constdata)
 <LI><a href="#[c]">WDT_IRQHandler</a> from interrupthandler.o(i.WDT_IRQHandler) referenced from startup_n575_keil.o(RESET)
 <LI><a href="#[24]">__main</a> from __main.o(!!!main) referenced from startup_n575_keil.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[24]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[26]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[28]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[149]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[14a]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[29]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[14b]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[2d]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[14c]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))

<P><STRONG><a name="[14d]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[14e]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[14f]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[150]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[151]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[152]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[153]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[154]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[155]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[156]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[157]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[158]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[159]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[15a]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[15b]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[15c]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))

<P><STRONG><a name="[15d]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[15e]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[15f]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[32]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[160]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[161]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[162]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[163]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[164]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[165]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[27]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[166]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[2a]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2c]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[167]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[2e]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 736 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; App_Initiate &rArr; App_StartRecognize &rArr; VROneCmdApp_Initiate &rArr; CSpotter_Init_Sep &rArr; CSpotter_Init_Multi &rArr; NINJA_API_9 &rArr; BsrRay &rArr; BsrDina &rArr; BsrJami &rArr; BsrJose
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[168]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[3e]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[31]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[169]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[33]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[147]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetModuleClock
</UL>

<P><STRONG><a name="[16a]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text), UNUSED)

<P><STRONG><a name="[23]"></a>Reset_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, startup_n575_keil.o(.text))

<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_n575_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_n575_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_n575_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_n575_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_n575_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>ACMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n575_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n575_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>ALC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n575_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n575_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n575_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n575_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n575_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n575_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>PWM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n575_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n575_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TALARM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n575_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n575_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_n575_keil.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[e0]"></a>memcmp</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_CheckTgrPinInPress
</UL>

<P><STRONG><a name="[36]"></a>_memset_w</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[35]"></a>_memset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_SetInBufRecord
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VolumeCtrl_Reset
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_SetOutputBuf
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4_DecodeProcess
</UL>

<P><STRONG><a name="[16b]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[e4]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MicGetApp_Initiate
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4App_DecodeInitiate
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4_DecodeInitiate
</UL>

<P><STRONG><a name="[16c]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[38]"></a>__rt_memclr_w</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[16d]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysClk_InitiateRC
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DPWM_SetSampleRate
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_ChangeSR
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_ChangeSR
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetWorkingFreq
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SetVarClock
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SetBusClock
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetBusClock
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJoey
</UL>

<P><STRONG><a name="[16e]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SetPGAGaindB
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SetALCTargetLevel
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJami
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJean
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJane
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJana
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrErin
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrEmma
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDina
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJodi
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJoan
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJill
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrClay
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrErica
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrElsa
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrElla
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDan
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJoel
</UL>

<P><STRONG><a name="[16f]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[170]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[171]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[dd]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Initiate
</UL>

<P><STRONG><a name="[172]"></a>_dfixu</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, dfixui.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>__aeabi_i2d_normalise</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_i2d</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>

<P><STRONG><a name="[173]"></a>_dflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>__aeabi_ui2d</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Initiate
</UL>

<P><STRONG><a name="[174]"></a>_dfltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Initiate
</UL>

<P><STRONG><a name="[175]"></a>_dmul</STRONG> (Thumb, 592 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[30]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[176]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[177]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[178]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[179]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[f4]"></a>ADC_Close</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, adc.o(i.ADC_Close))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Close
</UL>

<P><STRONG><a name="[17a]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[f2]"></a>ADC_DisableInt</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, adc.o(i.ADC_DisableInt))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Close
</UL>

<P><STRONG><a name="[f3]"></a>ADC_DisableMICBias</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, adc.o(i.ADC_DisableMICBias))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Close
</UL>

<P><STRONG><a name="[f8]"></a>ADC_EnableMICBias</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, adc.o(i.ADC_EnableMICBias))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Open
</UL>

<P><STRONG><a name="[fa]"></a>ADC_Open</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, adc.o(i.ADC_Open))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Open
</UL>

<P><STRONG><a name="[3f]"></a>ADC_SetALCTargetLevel</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, adc.o(i.ADC_SetALCTargetLevel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_SetALCTargetLevel &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Open
</UL>

<P><STRONG><a name="[f9]"></a>ADC_SetAMUX</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, adc.o(i.ADC_SetAMUX))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_SetAMUX
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Open
</UL>

<P><STRONG><a name="[41]"></a>ADC_SetPGAGaindB</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, adc.o(i.ADC_SetPGAGaindB))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_SetPGAGaindB &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Open
</UL>

<P><STRONG><a name="[42]"></a>App_Initiate</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, appfunctions.o(i.App_Initiate))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = App_Initiate &rArr; App_StartRecognize &rArr; VROneCmdApp_Initiate &rArr; CSpotter_Init_Sep &rArr; CSpotter_Init_Multi &rArr; NINJA_API_9 &rArr; BsrRay &rArr; BsrDina &rArr; BsrJami &rArr; BsrJose
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VROneCmdApp_UnpackBin
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreLoad_VRBin
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Initiate
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MicGetApp_Initiate
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StartRecognize
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputPin_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4a]"></a>App_PowerDown</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, appfunctions.o(i.App_PowerDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = App_PowerDown &rArr; App_StartRecognize &rArr; VROneCmdApp_Initiate &rArr; CSpotter_Init_Sep &rArr; CSpotter_Init_Multi &rArr; NINJA_API_9 &rArr; BsrRay &rArr; BsrDina &rArr; BsrJami &rArr; BsrJose
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Exit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Enter
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Initiate
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MicGetApp_Initiate
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StopRecognize
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StopPlay
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StartRecognize
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputPin_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_KeypadHandler
</UL>

<P><STRONG><a name="[50]"></a>App_Process</STRONG> (Thumb, 456 bytes, Stack size 16 bytes, appfunctions.o(i.App_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = App_Process &rArr; VROneCmdApp_GetCMDID &rArr; CSpotter_AddSample &rArr; NINJA_API_13 &rArr; NINJA_API_11 &rArr; BsrAsa &rArr; BsrCara &rArr; BsrBret
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VROneCmdApp_GetCMDID
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MicGetApp_StopRec
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MicGetApp_StartRec
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MicGetApp_ProcessRec
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4App_DecodeProcess
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StopPlay
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StartPlay
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputPin_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>App_StartPlay</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, appfunctions.o(i.App_StartPlay))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = App_StartPlay &rArr; MD4App_DecodeStartPlayByID &rArr; MD4App_DecodeStartPlayByAddr &rArr; MD4App_DecodeProcess &rArr; MD4_DecodeProcess &rArr; MD4_DecodeFrame &rArr; MD4_CheckResLdr
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StartPlay
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4App_DecodeStartPlayByID
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4App_DecodeInitiate
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Process
</UL>

<P><STRONG><a name="[49]"></a>App_StartRecognize</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, appfunctions.o(i.App_StartRecognize))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = App_StartRecognize &rArr; VROneCmdApp_Initiate &rArr; CSpotter_Init_Sep &rArr; CSpotter_Init_Multi &rArr; NINJA_API_9 &rArr; BsrRay &rArr; BsrDina &rArr; BsrJami &rArr; BsrJose
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VROneCmdApp_Initiate
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MicGetApp_StartRec
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputPin_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_KeyHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_PowerDown
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Initiate
</UL>

<P><STRONG><a name="[4c]"></a>App_StopPlay</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, appfunctions.o(i.App_StopPlay))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = App_StopPlay &rArr; MD4App_DecodeStopPlay &rArr; Playback_Remove &rArr; SPK_ChangeSR &rArr; DPWM_SetSampleRate &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StopPlay
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4App_DecodeStopPlay
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_PowerDown
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Process
</UL>

<P><STRONG><a name="[4b]"></a>App_StopRecognize</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, appfunctions.o(i.App_StopRecognize))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = App_StopRecognize &rArr; CSpotter_Release &rArr; NINJA_API_47 &rArr; BsrTre &rArr; BsrJoan &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MicGetApp_StopRec
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_Release
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_KeyHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_PowerDown
</UL>

<P><STRONG><a name="[5e]"></a>AudioRom_GetAudioChunkInfo</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, audiorom.o(i.AudioRom_GetAudioChunkInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = AudioRom_GetAudioChunkInfo &rArr; AudioRom_GetRomHeader
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioRom_GetRomHeader
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4App_DecodeStartPlayByID
</UL>

<P><STRONG><a name="[5f]"></a>AudioRom_GetRomHeader</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, audiorom.o(i.AudioRom_GetRomHeader))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AudioRom_GetRomHeader
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioRom_GetAudioChunkInfo
</UL>

<P><STRONG><a name="[62]"></a>BIQ_Reset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, biq.o(i.BIQ_Reset))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BIQFilter_Setting
</UL>

<P><STRONG><a name="[63]"></a>BIQ_SetCoeff</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, biq.o(i.BIQ_SetCoeff))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BIQ_SetCoeff
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BIQFilter_Setting
</UL>

<P><STRONG><a name="[10b]"></a>BsrAbby</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, bsrjoe.o(i.BsrAbby))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_9
</UL>

<P><STRONG><a name="[65]"></a>BsrAbel</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, bsrjoe.o(i.BsrAbel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BsrAbel
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrCory
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJill
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJess
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrChaz
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrMegan
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrMya
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrMichael
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAmos
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAlma
</UL>

<P><STRONG><a name="[6c]"></a>BsrAdam</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, bsrjoe.o(i.BsrAdam))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BsrAdam
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrCoty
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJill
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJess
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrChaz
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrNia
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAna
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAmos
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAmir
</UL>

<P><STRONG><a name="[64]"></a>BsrAlma</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, bsrdon.o(i.BsrAlma))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BsrAlma &rArr; BsrErica &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrZoe
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrErica
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrBrad
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAbel
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAnnie
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJohn
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_9
</UL>

<P><STRONG><a name="[6b]"></a>BsrAmir</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bsrdon.o(i.BsrAmir))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BsrAmir &rArr; BsrAdam
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAdam
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_2
</UL>

<P><STRONG><a name="[6d]"></a>BsrAmos</STRONG> (Thumb, 282 bytes, Stack size 48 bytes, bsrdon.o(i.BsrAmos))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = BsrAmos &rArr; BsrEden &rArr; BsrGreg &rArr; BsrIvan
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrElsa
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrElla
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrEden
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAdam
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAbel
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJose
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_13
</UL>

<P><STRONG><a name="[72]"></a>BsrAna</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, bsrjim.o(i.BsrAna))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = BsrAna &rArr; BsrAdam
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAdam
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrMichael
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_2
</UL>

<P><STRONG><a name="[ab]"></a>BsrAnn</STRONG> (Thumb, 180 bytes, Stack size 20 bytes, bsrjim.o(i.BsrAnn))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BsrAnn
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrMichael
</UL>

<P><STRONG><a name="[73]"></a>BsrAnna</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bsrdon.o(i.BsrAnna))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BsrAnna &rArr; BsrErica &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrErica
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_9
</UL>

<P><STRONG><a name="[74]"></a>BsrAnne</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsrdon.o(i.BsrAnne))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BsrAnne
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrZoe
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_8
</UL>

<P><STRONG><a name="[67]"></a>BsrAnnie</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bsrdon.o(i.BsrAnnie))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BsrAnnie
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrZoe
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAlma
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_8
</UL>

<P><STRONG><a name="[7b]"></a>BsrAri</STRONG> (Thumb, 104 bytes, Stack size 12 bytes, bsrjim.o(i.BsrAri))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BsrAri
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAsa
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_11
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_3
</UL>

<P><STRONG><a name="[75]"></a>BsrAsa</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, bsrjim.o(i.BsrAsa))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = BsrAsa &rArr; BsrCara &rArr; BsrBret
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrClay
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrChaz
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrChad
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrCara
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrCale
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrCade
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAri
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_11
</UL>

<P><STRONG><a name="[7d]"></a>BsrAva</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, bsrjim.o(i.BsrAva))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = BsrAva &rArr; BsrBen
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrBen
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrZoe
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_8
</UL>

<P><STRONG><a name="[107]"></a>BsrAyla</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bsrdon.o(i.BsrAyla))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_26
</UL>

<P><STRONG><a name="[108]"></a>BsrBaby</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bsrdon.o(i.BsrBaby))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_48
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_47
</UL>

<P><STRONG><a name="[7e]"></a>BsrBen</STRONG> (Thumb, 106 bytes, Stack size 12 bytes, bsrjim.o(i.BsrBen))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BsrBen
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrMichael
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAva
</UL>

<P><STRONG><a name="[6a]"></a>BsrBrad</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, bsrben.o(i.BsrBrad))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrErik
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAlma
</UL>

<P><STRONG><a name="[7f]"></a>BsrBret</STRONG> (Thumb, 288 bytes, Stack size 100 bytes, bsrjay.o(i.BsrBret))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = BsrBret
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrCara
</UL>

<P><STRONG><a name="[76]"></a>BsrCade</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, bsrjay.o(i.BsrCade))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BsrCade
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAsa
</UL>

<P><STRONG><a name="[77]"></a>BsrCale</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, bsrjay.o(i.BsrCale))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BsrCale
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAsa
</UL>

<P><STRONG><a name="[78]"></a>BsrCara</STRONG> (Thumb, 492 bytes, Stack size 100 bytes, bsrjay.o(i.BsrCara))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = BsrCara &rArr; BsrBret
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrBret
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAsa
</UL>

<P><STRONG><a name="[79]"></a>BsrChad</STRONG> (Thumb, 142 bytes, Stack size 20 bytes, bsrjay.o(i.BsrChad))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BsrChad
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAsa
</UL>

<P><STRONG><a name="[7a]"></a>BsrChaz</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, bsrjay.o(i.BsrChaz))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = BsrChaz &rArr; BsrAbel
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAdam
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAbel
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAsa
</UL>

<P><STRONG><a name="[7c]"></a>BsrClay</STRONG> (Thumb, 548 bytes, Stack size 40 bytes, bsrjay.o(i.BsrClay))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BsrClay &rArr; BsrJean &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJena
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJean
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJane
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJana
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAsa
</UL>

<P><STRONG><a name="[84]"></a>BsrCory</STRONG> (Thumb, 350 bytes, Stack size 24 bytes, bsrjoy.o(i.BsrCory))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BsrCory &rArr; BsrJade
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJade
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrCoty
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAbel
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJosh
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJohn
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrRay
</UL>

<P><STRONG><a name="[87]"></a>BsrCoty</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bsrjoy.o(i.BsrCoty))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BsrCoty &rArr; BsrAdam
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAdam
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrCory
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrMia
</UL>

<P><STRONG><a name="[8a]"></a>BsrDale</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bsrjoy.o(i.BsrDale))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDina
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDeon
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDemi
</UL>

<P><STRONG><a name="[88]"></a>BsrDan</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bsrjim.o(i.BsrDan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BsrDan &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_9
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_15
</UL>

<P><STRONG><a name="[af]"></a>BsrDane</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsrjoy.o(i.BsrDane))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrRay
</UL>

<P><STRONG><a name="[8d]"></a>BsrDawn</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsrjoy.o(i.BsrDawn))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDina
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDeon
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrRay
</UL>

<P><STRONG><a name="[a0]"></a>BsrDeja</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, bsrjoy.o(i.BsrDeja))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BsrDeja
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJess
</UL>

<P><STRONG><a name="[89]"></a>BsrDemi</STRONG> (Thumb, 176 bytes, Stack size 96 bytes, bsrjoy.o(i.BsrDemi))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = BsrDemi &rArr; BsrJake &rArr;  BsrJake (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDale
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJake
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJess
</UL>

<P><STRONG><a name="[8c]"></a>BsrDeon</STRONG> (Thumb, 206 bytes, Stack size 64 bytes, bsrjoy.o(i.BsrDeon))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = BsrDeon &rArr; BsrJami &rArr; BsrJose
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDale
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJami
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDawn
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrRay
</UL>

<P><STRONG><a name="[8f]"></a>BsrDina</STRONG> (Thumb, 236 bytes, Stack size 120 bytes, bsrjoy.o(i.BsrDina))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = BsrDina &rArr; BsrJami &rArr; BsrJose
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDale
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJami
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDawn
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrRay
</UL>

<P><STRONG><a name="[90]"></a>BsrDion</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, bsrjoy.o(i.BsrDion))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BsrDion &rArr; BsrJade
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJade
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrZoe
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJosh
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrRoy
</UL>

<P><STRONG><a name="[6e]"></a>BsrEden</STRONG> (Thumb, 286 bytes, Stack size 48 bytes, bsreva.o(i.BsrEden))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = BsrEden &rArr; BsrGreg &rArr; BsrIvan
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrIsai
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrIrma
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrIris
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrHugo
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrGreg
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrGary
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrEvan
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrErin
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrErik
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrEric
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrEmma
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJohn
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAmos
</UL>

<P><STRONG><a name="[103]"></a>BsrEli</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, bsrjim.o(i.BsrEli))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BsrEli
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_11
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_23
</UL>

<P><STRONG><a name="[6f]"></a>BsrElla</STRONG> (Thumb, 330 bytes, Stack size 40 bytes, bsreva.o(i.BsrElla))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = BsrElla &rArr; BsrJuanitez
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJuanitez
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJuanita
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAmos
</UL>

<P><STRONG><a name="[70]"></a>BsrElsa</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, bsreva.o(i.BsrElsa))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = BsrElsa &rArr; BsrJuanitez
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJuanitez
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJuanita
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAmos
</UL>

<P><STRONG><a name="[99]"></a>BsrEmma</STRONG> (Thumb, 128 bytes, Stack size 48 bytes, bsreli.o(i.BsrEmma))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BsrEmma &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrEden
</UL>

<P><STRONG><a name="[96]"></a>BsrEric</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, bsreli.o(i.BsrEric))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BsrEric
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrEden
</UL>

<P><STRONG><a name="[69]"></a>BsrErica</STRONG> (Thumb, 196 bytes, Stack size 40 bytes, bsreli.o(i.BsrErica))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BsrErica &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAnna
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAlma
</UL>

<P><STRONG><a name="[9a]"></a>BsrErik</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, bsreli.o(i.BsrErik))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BsrErik
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrBrad
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrEden
</UL>

<P><STRONG><a name="[97]"></a>BsrErin</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, bsreli.o(i.BsrErin))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BsrErin &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrEden
</UL>

<P><STRONG><a name="[102]"></a>BsrEva</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, bsrjim.o(i.BsrEva))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_11
</UL>

<P><STRONG><a name="[98]"></a>BsrEvan</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, bsreli.o(i.BsrEvan))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BsrEvan
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrEden
</UL>

<P><STRONG><a name="[9b]"></a>BsrGary</STRONG> (Thumb, 96 bytes, Stack size 36 bytes, bsrana.o(i.BsrGary))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = BsrGary
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrEden
</UL>

<P><STRONG><a name="[95]"></a>BsrGreg</STRONG> (Thumb, 242 bytes, Stack size 104 bytes, bsrann.o(i.BsrGreg))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = BsrGreg &rArr; BsrIvan
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrIvan
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrEden
</UL>

<P><STRONG><a name="[10d]"></a>BsrGuy</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, bsrjim.o(i.BsrGuy))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_9
</UL>

<P><STRONG><a name="[93]"></a>BsrHugo</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, bsrguy.o(i.BsrHugo))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BsrHugo
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrEden
</UL>

<P><STRONG><a name="[92]"></a>BsrIris</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, bsrguy.o(i.BsrIris))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BsrIris
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrEden
</UL>

<P><STRONG><a name="[91]"></a>BsrIrma</STRONG> (Thumb, 96 bytes, Stack size 20 bytes, bsrguy.o(i.BsrIrma))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BsrIrma
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrEden
</UL>

<P><STRONG><a name="[94]"></a>BsrIsai</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, bsrguy.o(i.BsrIsai))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BsrIsai
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrEden
</UL>

<P><STRONG><a name="[106]"></a>BsrJan</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bsrjim.o(i.BsrJan))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_19
</UL>

<P><STRONG><a name="[66]"></a>BsrJohn</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bsrali.o(i.BsrJohn))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrCory
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrEden
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrMya
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrMichael
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAlma
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_9
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_Init_Multi
</UL>

<P><STRONG><a name="[71]"></a>BsrJose</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bsrali.o(i.BsrJose))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BsrJose
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJami
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJess
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAmos
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_13
</UL>

<P><STRONG><a name="[85]"></a>BsrJosh</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, bsrali.o(i.BsrJosh))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BsrJosh
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDion
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrCory
</UL>

<P><STRONG><a name="[104]"></a>BsrKai</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bsrjim.o(i.BsrKai))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_13
</UL>

<P><STRONG><a name="[a9]"></a>BsrMichael</STRONG> (Thumb, 308 bytes, Stack size 40 bytes, bsrjim.o(i.BsrMichael))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = BsrMichael &rArr; BsrMegan &rArr; BsrAbel
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrBen
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAnn
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrMelissa
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrMegan
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAbel
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAna
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJohn
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_9
</UL>

<P><STRONG><a name="[ac]"></a>BsrMya</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, bsrkai.o(i.BsrMya))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = BsrMya &rArr; BsrNia &rArr; BsrMia &rArr; BsrCoty &rArr; BsrAdam
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrMia
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAbel
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrNia
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJohn
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_9
</UL>

<P><STRONG><a name="[ad]"></a>BsrNia</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bsrkai.o(i.BsrNia))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = BsrNia &rArr; BsrMia &rArr; BsrCoty &rArr; BsrAdam
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrMia
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAdam
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrMya
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_2
</UL>

<P><STRONG><a name="[ae]"></a>BsrRay</STRONG> (Thumb, 136 bytes, Stack size 184 bytes, bsrkai.o(i.BsrRay))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = BsrRay &rArr; BsrDina &rArr; BsrJami &rArr; BsrJose
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDina
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDeon
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDawn
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDane
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrCory
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrMia
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrTom
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_9
</UL>

<P><STRONG><a name="[10c]"></a>BsrRex</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bsrkai.o(i.BsrRex))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_9
</UL>

<P><STRONG><a name="[105]"></a>BsrRey</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bsrkai.o(i.BsrRey))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_13
</UL>

<P><STRONG><a name="[b1]"></a>BsrRon</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, bsrkai.o(i.BsrRon))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = BsrRon &rArr; BsrJess &rArr; BsrDemi &rArr; BsrJake &rArr;  BsrJake (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJody
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJill
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJess
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_13
</UL>

<P><STRONG><a name="[b3]"></a>BsrRoy</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, bsrkai.o(i.BsrRoy))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BsrRoy &rArr; BsrDion &rArr; BsrJade
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDion
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrZoe
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_8
</UL>

<P><STRONG><a name="[109]"></a>BsrTed</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bsrkai.o(i.BsrTed))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_48
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_47
</UL>

<P><STRONG><a name="[10a]"></a>BsrTia</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, bsrkai.o(i.BsrTia))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BsrTia
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_47
</UL>

<P><STRONG><a name="[b0]"></a>BsrTom</STRONG> (Thumb, 124 bytes, Stack size 20 bytes, bsrkai.o(i.BsrTom))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BsrTom
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrRay
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_48
</UL>

<P><STRONG><a name="[b4]"></a>BsrTre</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsrkai.o(i.BsrTre))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BsrTre &rArr; BsrJoan &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJoan
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_47
</UL>

<P><STRONG><a name="[68]"></a>BsrZoe</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bsrjoe.o(i.BsrZoe))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDion
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrRoy
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAva
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAnnie
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAnne
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAlma
</UL>

<P><STRONG><a name="[fc]"></a>BufCtrl_UpdateReadWithCount</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, bufctrl.o(i.BufCtrl_UpdateReadWithCount))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Process
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MicGetApp_ProcessRec
</UL>

<P><STRONG><a name="[e8]"></a>BufCtrl_UpdateWriteWithCount</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, bufctrl.o(i.BufCtrl_UpdateWriteWithCount))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_Process
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4App_DecodeProcess
</UL>

<P><STRONG><a name="[1c]"></a>CAPS_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, interrupthandler.o(i.CAPS_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[b5]"></a>CLK_DeepSleep</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, clk.o(i.CLK_DeepSleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLK_DeepSleep
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Unlock
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown
</UL>

<P><STRONG><a name="[b8]"></a>CLK_DisableLDO</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, clk.o(i.CLK_DisableLDO))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLK_DisableLDO
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Unlock
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Enter
</UL>

<P><STRONG><a name="[f5]"></a>CLK_DisableModuleClock</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, clk.o(i.CLK_DisableModuleClock))
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Close
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_UnInit
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Close
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Enter
</UL>

<P><STRONG><a name="[b9]"></a>CLK_EnableLDO</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, clk.o(i.CLK_EnableLDO))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLK_EnableLDO
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Unlock
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Exit
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>CLK_EnableModuleClock</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, clk.o(i.CLK_EnableModuleClock))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Open
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Open
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Initiate
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Initiate
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BIQFilter_Setting
</UL>

<P><STRONG><a name="[ba]"></a>CLK_EnableXtalRC</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, clk.o(i.CLK_EnableXtalRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLK_EnableXtalRC
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Unlock
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysClk_InitiateRC
</UL>

<P><STRONG><a name="[bb]"></a>CLK_GetHCLKFreq</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, clk.o(i.CLK_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CLK_GetHCLKFreq &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SetVarClock
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SetBusClock
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetBusClock
</UL>

<P><STRONG><a name="[bd]"></a>CLK_SetHCLK</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, clk.o(i.CLK_SetHCLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CLK_SetHCLK &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Unlock
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Lock
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysClk_InitiateRC
</UL>

<P><STRONG><a name="[d9]"></a>CLK_SetModuleClock</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, clk.o(i.CLK_SetModuleClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CLK_SetModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Open
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Initiate
</UL>

<P><STRONG><a name="[be]"></a>CLK_SetSysTickClockSrc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, clk.o(i.CLK_SetSysTickClockSrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLK_SetSysTickClockSrc
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Unlock
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_GPIOStableCount
</UL>

<P><STRONG><a name="[131]"></a>CLK_SysTickDelay</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, clk.o(i.CLK_SysTickDelay))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_GPIOStableCount
</UL>

<P><STRONG><a name="[bf]"></a>CSpotter_AddSample</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, cspottersdkapi.o(i.CSpotter_AddSample))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = CSpotter_AddSample &rArr; NINJA_API_13 &rArr; NINJA_API_11 &rArr; BsrAsa &rArr; BsrCara &rArr; BsrBret
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_23
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_15
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_13
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VROneCmdApp_GetCMDID
</UL>

<P><STRONG><a name="[c3]"></a>CSpotter_GetMemoryUsage_Multi</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, cspottersdkapi.o(i.CSpotter_GetMemoryUsage_Multi))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = CSpotter_GetMemoryUsage_Multi &rArr; NINJA_API_8 &rArr; BsrRoy &rArr; BsrDion &rArr; BsrJade
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_8
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_GetMemoryUsage_Sep
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_Init_Multi
</UL>

<P><STRONG><a name="[c5]"></a>CSpotter_GetMemoryUsage_Sep</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, cspottersdkapi.o(i.CSpotter_GetMemoryUsage_Sep))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = CSpotter_GetMemoryUsage_Sep &rArr; CSpotter_GetMemoryUsage_Multi &rArr; NINJA_API_8 &rArr; BsrRoy &rArr; BsrDion &rArr; BsrJade
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_GetMemoryUsage_Multi
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VROneCmdApp_Initiate
</UL>

<P><STRONG><a name="[c6]"></a>CSpotter_GetResult</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cspottersdkapi.o(i.CSpotter_GetResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = CSpotter_GetResult &rArr; NINJA_API_47 &rArr; BsrTre &rArr; BsrJoan &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_47
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VROneCmdApp_GetCMDID
</UL>

<P><STRONG><a name="[c8]"></a>CSpotter_Init_Multi</STRONG> (Thumb, 324 bytes, Stack size 104 bytes, cspottersdkapi.o(i.CSpotter_Init_Multi))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = CSpotter_Init_Multi &rArr; NINJA_API_9 &rArr; BsrRay &rArr; BsrDina &rArr; BsrJami &rArr; BsrJose
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_Release
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_9
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_48
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_47
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_26
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_19
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_15
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_1
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJohn
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_GetMemoryUsage_Multi
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrLuke
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_Init_Sep
</UL>

<P><STRONG><a name="[cf]"></a>CSpotter_Init_Sep</STRONG> (Thumb, 30 bytes, Stack size 56 bytes, cspottersdkapi.o(i.CSpotter_Init_Sep))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = CSpotter_Init_Sep &rArr; CSpotter_Init_Multi &rArr; NINJA_API_9 &rArr; BsrRay &rArr; BsrDina &rArr; BsrJami &rArr; BsrJose
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_Init_Multi
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VROneCmdApp_Initiate
</UL>

<P><STRONG><a name="[5d]"></a>CSpotter_Release</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, cspottersdkapi.o(i.CSpotter_Release))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = CSpotter_Release &rArr; NINJA_API_47 &rArr; BsrTre &rArr; BsrJoan &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_47
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_2
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StopRecognize
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_Init_Multi
</UL>

<P><STRONG><a name="[d1]"></a>CSpotter_Reset</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, cspottersdkapi.o(i.CSpotter_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CSpotter_Reset &rArr; NINJA_API_3 &rArr; BsrAri
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_3
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VROneCmdApp_Initiate
</UL>

<P><STRONG><a name="[144]"></a>DPWM_Open</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dpwm.o(i.DPWM_Open))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Open
</UL>

<P><STRONG><a name="[d3]"></a>DPWM_SetSampleRate</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, dpwm.o(i.DPWM_SetSampleRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DPWM_SetSampleRate &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_ChangeSR
</UL>

<P><STRONG><a name="[22]"></a>Default_KeyHandler</STRONG> (Thumb, 268 bytes, Stack size 8 bytes, inputkeyactions.o(i.Default_KeyHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = Default_KeyHandler &rArr; PowerDown_KeypadHandler &rArr; App_PowerDown &rArr; App_StartRecognize &rArr; VROneCmdApp_Initiate &rArr; CSpotter_Init_Sep &rArr; CSpotter_Init_Multi &rArr; NINJA_API_9 &rArr; BsrRay &rArr; BsrDina &rArr; BsrJami &rArr; BsrJose
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_KeypadHandler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VROneCmdApp_UnpackBin
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreLoad_VRBin
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StopRecognize
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StartRecognize
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputPin_Set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> configio.o(.constdata)
</UL>
<P><STRONG><a name="[135]"></a>FMC_Close</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fmc.o(i.FMC_Close))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreLoad_VRBin
</UL>

<P><STRONG><a name="[133]"></a>FMC_Erase</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, fmc.o(i.FMC_Erase))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreLoad_VRBin
</UL>

<P><STRONG><a name="[132]"></a>FMC_Open</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fmc.o(i.FMC_Open))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreLoad_VRBin
</UL>

<P><STRONG><a name="[134]"></a>FMC_Write</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, fmc.o(i.FMC_Write))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreLoad_VRBin
</UL>

<P><STRONG><a name="[f]"></a>GPAB_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, interrupthandler.o(i.GPAB_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[12e]"></a>GPIO_DisableInt</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gpio.o(i.GPIO_DisableInt))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_GPIOConfigWakePin
</UL>

<P><STRONG><a name="[12d]"></a>GPIO_EnableInt</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio.o(i.GPIO_EnableInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_EnableInt
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_GPIOConfigWakePin
</UL>

<P><STRONG><a name="[d8]"></a>GPIO_SetMode</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gpio.o(i.GPIO_SetMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_GPIOPreProc
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Enter
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputPin_Initiate
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Initiate
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_InitTgr
</UL>

<P><STRONG><a name="[d5]"></a>InputKey_Change</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, configio.o(i.InputKey_Change))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = InputKey_Change &rArr; Keypad_InitTgr &rArr; Keypad_ResetTgr
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_InitTgr
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Initiate
</UL>

<P><STRONG><a name="[d7]"></a>InputKey_Initiate</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, configio.o(i.InputKey_Initiate))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InputKey_Initiate &rArr; TIMER_Open &rArr; TIMER_GetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetModuleClock
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetWorkingFreq
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_InitKeypad
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Change
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Exit
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[df]"></a>Keypad_CheckTgrPinInPress</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, keypad.o(i.Keypad_CheckTgrPinInPress))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Keypad_CheckTgrPinInPress &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_ScanTgr
</UL>

<P><STRONG><a name="[de]"></a>Keypad_InitKeypad</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, keypad.o(i.Keypad_InitKeypad))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Initiate
</UL>

<P><STRONG><a name="[d6]"></a>Keypad_InitTgr</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, keypad.o(i.Keypad_InitTgr))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Keypad_InitTgr &rArr; Keypad_ResetTgr
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_ResetTgr
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Change
</UL>

<P><STRONG><a name="[e1]"></a>Keypad_ResetTgr</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, keypad.o(i.Keypad_ResetTgr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Keypad_ResetTgr
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Enter
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_InitTgr
</UL>

<P><STRONG><a name="[e2]"></a>Keypad_ScanTgr</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, keypad.o(i.Keypad_ScanTgr))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Keypad_ScanTgr &rArr; Keypad_TgrGetEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_TgrGetEvent
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_CheckTgrPinInPress
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[148]"></a>Keypad_TgrDecDebounceCounter</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, keypad.o(i.Keypad_TgrDecDebounceCounter))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_IRQHandler
</UL>

<P><STRONG><a name="[e3]"></a>Keypad_TgrGetEvent</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, keypad.o(i.Keypad_TgrGetEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Keypad_TgrGetEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_ScanTgr
</UL>

<P><STRONG><a name="[57]"></a>MD4App_DecodeInitiate</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, md4app.o(i.MD4App_DecodeInitiate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MD4App_DecodeInitiate
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StartPlay
</UL>

<P><STRONG><a name="[55]"></a>MD4App_DecodeProcess</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, md4app.o(i.MD4App_DecodeProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = MD4App_DecodeProcess &rArr; MD4_DecodeProcess &rArr; MD4_DecodeFrame &rArr; MD4_CheckResLdr
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Remove
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4_DecodeProcess
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4_DecodeIsEnd
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BufCtrl_UpdateWriteWithCount
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Process
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4App_DecodeStartPlayByAddr
</UL>

<P><STRONG><a name="[e9]"></a>MD4App_DecodeStartPlayByAddr</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, md4app.o(i.MD4App_DecodeStartPlayByAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = MD4App_DecodeStartPlayByAddr &rArr; MD4App_DecodeProcess &rArr; MD4_DecodeProcess &rArr; MD4_DecodeFrame &rArr; MD4_CheckResLdr
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4App_DecodeProcess
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_SetOutputBuf
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Add
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4_DecodeInitiate
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4App_DecodeStartPlayByID
</UL>

<P><STRONG><a name="[58]"></a>MD4App_DecodeStartPlayByID</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, md4app.o(i.MD4App_DecodeStartPlayByID))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = MD4App_DecodeStartPlayByID &rArr; MD4App_DecodeStartPlayByAddr &rArr; MD4App_DecodeProcess &rArr; MD4_DecodeProcess &rArr; MD4_DecodeFrame &rArr; MD4_CheckResLdr
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioRom_GetAudioChunkInfo
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4App_DecodeStartPlayByAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StartPlay
</UL>

<P><STRONG><a name="[5c]"></a>MD4App_DecodeStopPlay</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, md4app.o(i.MD4App_DecodeStopPlay))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MD4App_DecodeStopPlay &rArr; Playback_Remove &rArr; SPK_ChangeSR &rArr; DPWM_SetSampleRate &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Remove
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StopPlay
</UL>

<P><STRONG><a name="[ea]"></a>MD4_DecodeInitiate</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, md4decode.o(i.MD4_DecodeInitiate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MD4_DecodeInitiate
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4App_DecodeStartPlayByAddr
</UL>

<P><STRONG><a name="[e5]"></a>MD4_DecodeIsEnd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, md4decode.o(i.MD4_DecodeIsEnd))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4App_DecodeProcess
</UL>

<P><STRONG><a name="[e7]"></a>MD4_DecodeProcess</STRONG> (Thumb, 322 bytes, Stack size 40 bytes, md4decode.o(i.MD4_DecodeProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = MD4_DecodeProcess &rArr; MD4_DecodeFrame &rArr; MD4_CheckResLdr
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4_DecodeFrame
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4_CheckResLdr
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4App_DecodeProcess
</UL>

<P><STRONG><a name="[f0]"></a>MIC_ChangeSR</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, micspk.o(i.MIC_ChangeSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MIC_ChangeSR
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_Add
</UL>

<P><STRONG><a name="[f1]"></a>MIC_Close</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, micspk.o(i.MIC_Close))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MIC_Close
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_DisableModuleClock
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DisableMICBias
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DisableInt
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Close
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Enter
</UL>

<P><STRONG><a name="[f6]"></a>MIC_Open</STRONG> (Thumb, 274 bytes, Stack size 8 bytes, micspk.o(i.MIC_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = MIC_Open &rArr; PdmaCtrl_Open &rArr; PDMA_SetTransferMode &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ResetModule
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Open
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SetPGAGaindB
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SetAMUX
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SetALCTargetLevel
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Open
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_EnableMICBias
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BIQFilter_Setting
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Exit
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[136]"></a>MIC_Start</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, micspk.o(i.MIC_Start))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_StartRec
</UL>

<P><STRONG><a name="[137]"></a>MIC_Stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, micspk.o(i.MIC_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_StopRec
</UL>

<P><STRONG><a name="[44]"></a>MicGetApp_Initiate</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, micgetapp.o(i.MicGetApp_Initiate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MicGetApp_Initiate
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_PowerDown
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Initiate
</UL>

<P><STRONG><a name="[51]"></a>MicGetApp_ProcessRec</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, micgetapp.o(i.MicGetApp_ProcessRec))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MicGetApp_ProcessRec
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BufCtrl_UpdateReadWithCount
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Process
</UL>

<P><STRONG><a name="[56]"></a>MicGetApp_StartRec</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, micgetapp.o(i.MicGetApp_StartRec))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MicGetApp_StartRec &rArr; Record_Add &rArr; MIC_ChangeSR
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_StartRec
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_SetInBufRecord
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_Add
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StartRecognize
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Process
</UL>

<P><STRONG><a name="[53]"></a>MicGetApp_StopRec</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, micgetapp.o(i.MicGetApp_StopRec))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MicGetApp_StopRec &rArr; Record_StopRec
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_StopRec
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StopRecognize
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Process
</UL>

<P><STRONG><a name="[ca]"></a>NINJA_API_1</STRONG> (Thumb, 96 bytes, Stack size 20 bytes, bsrgo.o(i.NINJA_API_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = NINJA_API_1
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_9
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_8
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_Init_Multi
</UL>

<P><STRONG><a name="[101]"></a>NINJA_API_11</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, bsrgo.o(i.NINJA_API_11))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = NINJA_API_11 &rArr; BsrAsa &rArr; BsrCara &rArr; BsrBret
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrEva
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrEli
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAsa
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAri
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJoel
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_13
</UL>

<P><STRONG><a name="[c0]"></a>NINJA_API_13</STRONG> (Thumb, 262 bytes, Stack size 192 bytes, bsrgo.o(i.NINJA_API_13))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = NINJA_API_13 &rArr; NINJA_API_11 &rArr; BsrAsa &rArr; BsrCara &rArr; BsrBret
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrRon
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrRey
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrKai
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAmos
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_11
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJoey
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJose
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_AddSample
</UL>

<P><STRONG><a name="[c1]"></a>NINJA_API_15</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bsrgo.o(i.NINJA_API_15))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = NINJA_API_15 &rArr; BsrDan &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDan
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_AddSample
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_Init_Multi
</UL>

<P><STRONG><a name="[cd]"></a>NINJA_API_19</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bsrgo.o(i.NINJA_API_19))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NINJA_API_19
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJan
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_Init_Multi
</UL>

<P><STRONG><a name="[d0]"></a>NINJA_API_2</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsrgo.o(i.NINJA_API_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = NINJA_API_2 &rArr; BsrNia &rArr; BsrMia &rArr; BsrCoty &rArr; BsrAdam
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrNia
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAna
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAmir
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_Release
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_9
</UL>

<P><STRONG><a name="[c2]"></a>NINJA_API_23</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bsrgo.o(i.NINJA_API_23))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = NINJA_API_23 &rArr; BsrEli
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrEli
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_AddSample
</UL>

<P><STRONG><a name="[ce]"></a>NINJA_API_26</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bsrgo.o(i.NINJA_API_26))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NINJA_API_26
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAyla
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_Init_Multi
</UL>

<P><STRONG><a name="[d2]"></a>NINJA_API_3</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bsrgo.o(i.NINJA_API_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = NINJA_API_3 &rArr; BsrAri
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAri
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_Reset
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_9
</UL>

<P><STRONG><a name="[c7]"></a>NINJA_API_47</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, bsrgo.o(i.NINJA_API_47))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = NINJA_API_47 &rArr; BsrTre &rArr; BsrJoan &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrTre
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrTia
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrTed
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrBaby
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_Release
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_GetResult
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_Init_Multi
</UL>

<P><STRONG><a name="[cc]"></a>NINJA_API_48</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, bsrgo.o(i.NINJA_API_48))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = NINJA_API_48 &rArr; BsrTom
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrTom
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrTed
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrBaby
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_Init_Multi
</UL>

<P><STRONG><a name="[c4]"></a>NINJA_API_8</STRONG> (Thumb, 236 bytes, Stack size 96 bytes, bsrgo.o(i.NINJA_API_8))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = NINJA_API_8 &rArr; BsrRoy &rArr; BsrDion &rArr; BsrJade
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrRoy
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAva
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAnnie
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAnne
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_1
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_9
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_GetMemoryUsage_Multi
</UL>

<P><STRONG><a name="[cb]"></a>NINJA_API_9</STRONG> (Thumb, 654 bytes, Stack size 144 bytes, bsrgo.o(i.NINJA_API_9))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = NINJA_API_9 &rArr; BsrRay &rArr; BsrDina &rArr; BsrJami &rArr; BsrJose
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrRex
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrRay
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrMya
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrMichael
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrGuy
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDan
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAnna
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAlma
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAbby
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_8
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_3
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_2
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_1
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJohn
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_Init_Multi
</UL>

<P><STRONG><a name="[10e]"></a>OutputPin_Initiate</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, configio.o(i.OutputPin_Initiate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OutputPin_Initiate &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Exit
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>OutputPin_Set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, configio.o(i.OutputPin_Set))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_KeyHandler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Exit
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StartRecognize
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_PowerDown
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Process
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Initiate
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11c]"></a>PDMA_DisableInt</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, pdma.o(i.PDMA_DisableInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PDMA_DisableInt
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StopPlay
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Remove
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Add
</UL>

<P><STRONG><a name="[118]"></a>PDMA_EnableInt</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, pdma.o(i.PDMA_EnableInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PDMA_EnableInt
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StopPlay
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Open
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Remove
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Add
</UL>

<P><STRONG><a name="[1a]"></a>PDMA_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, interrupthandler.o(i.PDMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PDMA_IRQHandler &rArr; Playback_Process &rArr; PdmaCtrl_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_Process
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[114]"></a>PDMA_Open</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pdma.o(i.PDMA_Open))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Open
</UL>

<P><STRONG><a name="[115]"></a>PDMA_SetTransferAddr</STRONG> (Thumb, 30 bytes, Stack size 20 bytes, pdma.o(i.PDMA_SetTransferAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PDMA_SetTransferAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Open
</UL>

<P><STRONG><a name="[116]"></a>PDMA_SetTransferCnt</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, pdma.o(i.PDMA_SetTransferCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PDMA_SetTransferCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Open
</UL>

<P><STRONG><a name="[117]"></a>PDMA_SetTransferDirection</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, pdma.o(i.PDMA_SetTransferDirection))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PDMA_SetTransferDirection
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Open
</UL>

<P><STRONG><a name="[111]"></a>PDMA_SetTransferMode</STRONG> (Thumb, 228 bytes, Stack size 20 bytes, pdma.o(i.PDMA_SetTransferMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = PDMA_SetTransferMode &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Open
</UL>

<P><STRONG><a name="[11a]"></a>PDMA_Trigger</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pdma.o(i.PDMA_Trigger))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Start
</UL>

<P><STRONG><a name="[143]"></a>PdmaCtrl_Close</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, pdmactrl.o(i.PdmaCtrl_Close))
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Close
</UL>

<P><STRONG><a name="[112]"></a>PdmaCtrl_Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, pdmactrl.o(i.PdmaCtrl_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PdmaCtrl_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ResetModule
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Exit
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fb]"></a>PdmaCtrl_Open</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, pdmactrl.o(i.PdmaCtrl_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = PdmaCtrl_Open &rArr; PDMA_SetTransferMode &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_SetTransferMode
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_SetTransferDirection
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_SetTransferCnt
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_SetTransferAddr
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_Open
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_EnableInt
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Open
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Open
</UL>

<P><STRONG><a name="[119]"></a>PdmaCtrl_Start</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, pdmactrl.o(i.PdmaCtrl_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PdmaCtrl_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_Trigger
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_StartRec
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_Process
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Process
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StartPlay
</UL>

<P><STRONG><a name="[120]"></a>PdmaCtrl_Stop</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, pdmactrl.o(i.PdmaCtrl_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_StopRec
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Close
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Process
</UL>

<P><STRONG><a name="[11b]"></a>PdmaCtrl_UnInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, pdmactrl.o(i.PdmaCtrl_UnInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PdmaCtrl_UnInit
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_DisableModuleClock
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Enter
</UL>

<P><STRONG><a name="[ec]"></a>Playback_Add</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, playback.o(i.Playback_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Playback_Add &rArr; SPK_ChangeSR &rArr; DPWM_SetSampleRate &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StopPlay
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_DisableInt
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_EnableInt
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_ChangeSR
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4App_DecodeStartPlayByAddr
</UL>

<P><STRONG><a name="[43]"></a>Playback_Initiate</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, playback.o(i.Playback_Initiate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Playback_Initiate &rArr; Playback_ResetChannelVolume &rArr; VolumeCtrl_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_ResetChannelVolume
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_PowerDown
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Initiate
</UL>

<P><STRONG><a name="[10f]"></a>Playback_Process</STRONG> (Thumb, 342 bytes, Stack size 16 bytes, playback.o(i.Playback_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Playback_Process &rArr; PdmaCtrl_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BufCtrl_UpdateReadWithCount
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Start
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Stop
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VolumeCtrl_VolumeFade
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_IRQHandler
</UL>

<P><STRONG><a name="[e6]"></a>Playback_Remove</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, playback.o(i.Playback_Remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Playback_Remove &rArr; SPK_ChangeSR &rArr; DPWM_SetSampleRate &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StopPlay
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_DisableInt
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_EnableInt
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_ChangeSR
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4App_DecodeStopPlay
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4App_DecodeProcess
</UL>

<P><STRONG><a name="[11e]"></a>Playback_ResetChannelVolume</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, playback.o(i.Playback_ResetChannelVolume))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Playback_ResetChannelVolume &rArr; VolumeCtrl_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VolumeCtrl_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Initiate
</UL>

<P><STRONG><a name="[eb]"></a>Playback_SetOutputBuf</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, playback.o(i.Playback_SetOutputBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Playback_SetOutputBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4App_DecodeStartPlayByAddr
</UL>

<P><STRONG><a name="[59]"></a>Playback_StartPlay</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, playback.o(i.Playback_StartPlay))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Playback_StartPlay &rArr; PdmaCtrl_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Start
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StartPlay
</UL>

<P><STRONG><a name="[5b]"></a>Playback_StopPlay</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, playback.o(i.Playback_StopPlay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Playback_StopPlay &rArr; PDMA_DisableInt
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_DisableInt
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_EnableInt
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StopPlay
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Remove
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Add
</UL>

<P><STRONG><a name="[4e]"></a>PowerDown</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, powerdown.o(i.PowerDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PowerDown &rArr; CLK_DeepSleep
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_DeepSleep
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_PowerDown
</UL>

<P><STRONG><a name="[4d]"></a>PowerDown_Enter</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, powerdown.o(i.PowerDown_Enter))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PowerDown_Enter &rArr; PowerDown_GPIOPreProc &rArr; PowerDown_GPIOStableCount &rArr; CLK_SetSysTickClockSrc
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Close
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Close
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_UnInit
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Close
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_ResetTgr
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_DisableModuleClock
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_DisableLDO
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_GPIOPreProc
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_PowerDown
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_PowerDown
</UL>

<P><STRONG><a name="[4f]"></a>PowerDown_Exit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, powerdown.o(i.PowerDown_Exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = PowerDown_Exit &rArr; SPIFlash_Initiate &rArr; SPIFlash_Open &rArr; SPI_Open &rArr; SPI_SetVarClock &rArr; CLK_GetHCLKFreq &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_GPIOPostProc
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Open
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputPin_Set
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputPin_Initiate
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Open
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Initiate
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableLDO
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Initiate
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_PowerDown
</UL>

<P><STRONG><a name="[12c]"></a>PowerDown_GPIOConfigWakePin</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, powerdown.o(i.PowerDown_GPIOConfigWakePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PowerDown_GPIOConfigWakePin &rArr; GPIO_EnableInt
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EnableInt
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DisableInt
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_GPIOPreProc
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_GPIOPostProc
</UL>

<P><STRONG><a name="[129]"></a>PowerDown_GPIOPostProc</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, powerdown.o(i.PowerDown_GPIOPostProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PowerDown_GPIOPostProc &rArr; PowerDown_GPIOStableCount &rArr; CLK_SetSysTickClockSrc
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_GPIOStableCount
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_GPIOConfigWakePin
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Exit
</UL>

<P><STRONG><a name="[128]"></a>PowerDown_GPIOPreProc</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, powerdown.o(i.PowerDown_GPIOPreProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PowerDown_GPIOPreProc &rArr; PowerDown_GPIOStableCount &rArr; CLK_SetSysTickClockSrc
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_GPIOStableCount
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_GPIOConfigWakePin
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Enter
</UL>

<P><STRONG><a name="[12f]"></a>PowerDown_GPIOStableCount</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, powerdown.o(i.PowerDown_GPIOStableCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PowerDown_GPIOStableCount &rArr; CLK_SetSysTickClockSrc
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SysTickDelay
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetSysTickClockSrc
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_GPIOPreProc
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_GPIOPostProc
</UL>

<P><STRONG><a name="[d4]"></a>PowerDown_KeypadHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, inputkeyactions.o(i.PowerDown_KeypadHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 744<LI>Call Chain = PowerDown_KeypadHandler &rArr; App_PowerDown &rArr; App_StartRecognize &rArr; VROneCmdApp_Initiate &rArr; CSpotter_Init_Sep &rArr; CSpotter_Init_Multi &rArr; NINJA_API_9 &rArr; BsrRay &rArr; BsrDina &rArr; BsrJami &rArr; BsrJose
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_PowerDown
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_KeyHandler
</UL>

<P><STRONG><a name="[46]"></a>PreLoad_VRBin</STRONG> (Thumb, 198 bytes, Stack size 64 bytes, preload.o(i.PreLoad_VRBin))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = PreLoad_VRBin &rArr; SPIFlash_Read &rArr; SPIFlash_ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Unlock
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Lock
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Write
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Open
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Erase
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Close
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_KeyHandler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Initiate
</UL>

<P><STRONG><a name="[1e]"></a>RTC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupthandler.o(i.RTC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[fe]"></a>Record_Add</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, record.o(i.Record_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Record_Add &rArr; MIC_ChangeSR
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_ChangeSR
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MicGetApp_StartRec
</UL>

<P><STRONG><a name="[110]"></a>Record_Process</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, record.o(i.Record_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Record_Process &rArr; PdmaCtrl_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Start
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BufCtrl_UpdateWriteWithCount
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_IRQHandler
</UL>

<P><STRONG><a name="[fd]"></a>Record_SetInBufRecord</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, record.o(i.Record_SetInBufRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Record_SetInBufRecord
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MicGetApp_StartRec
</UL>

<P><STRONG><a name="[ff]"></a>Record_StartRec</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, record.o(i.Record_StartRec))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Record_StartRec &rArr; PdmaCtrl_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Start
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MicGetApp_StartRec
</UL>

<P><STRONG><a name="[100]"></a>Record_StopRec</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, record.o(i.Record_StopRec))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Record_StopRec
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Stop
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MicGetApp_StopRec
</UL>

<P><STRONG><a name="[13f]"></a>SPIFlash_3ByteAddr_Cmd</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, spiflash.o(i.SPIFlash_3ByteAddr_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPIFlash_3ByteAddr_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_ReadStart
</UL>

<P><STRONG><a name="[138]"></a>SPIFlash_GetChipInfo</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, spiflash.o(i.SPIFlash_GetChipInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SPIFlash_GetChipInfo &rArr; SPIFlash_SendRecOneData
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_SendRecOneData
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Initiate
</UL>

<P><STRONG><a name="[12b]"></a>SPIFlash_Initiate</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, main.o(i.SPIFlash_Initiate))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SPIFlash_Initiate &rArr; SPIFlash_Open &rArr; SPI_Open &rArr; SPI_SetVarClock &rArr; CLK_GetHCLKFreq &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ResetModule
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_PowerDown
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Open
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_GetChipInfo
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Exit
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13a]"></a>SPIFlash_Open</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, spiflash.o(i.SPIFlash_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SPIFlash_Open &rArr; SPI_Open &rArr; SPI_SetVarClock &rArr; CLK_GetHCLKFreq &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Open
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Initiate
</UL>

<P><STRONG><a name="[124]"></a>SPIFlash_PowerDown</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, spiflash.o(i.SPIFlash_PowerDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPIFlash_PowerDown &rArr; SPIFlash_SendRecOneData
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_SendRecOneData
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Enter
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Initiate
</UL>

<P><STRONG><a name="[45]"></a>SPIFlash_Read</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, spiflash.o(i.SPIFlash_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SPIFlash_Read &rArr; SPIFlash_ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_ReadStart
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_ReadEnd
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_ReadDataCallback
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreLoad_VRBin
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Initiate
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Initiate
</UL>

<P><STRONG><a name="[13d]"></a>SPIFlash_ReadData</STRONG> (Thumb, 212 bytes, Stack size 20 bytes, spiflash.o(i.SPIFlash_ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SPIFlash_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
</UL>

<P><STRONG><a name="[20]"></a>SPIFlash_ReadDataCallback</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, appcallback.o(i.SPIFlash_ReadDataCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SPIFlash_ReadDataCallback &rArr; SPIFlash_Read &rArr; SPIFlash_ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appcallback.o(.constdata)
</UL>
<P><STRONG><a name="[13e]"></a>SPIFlash_ReadEnd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, spiflash.o(i.SPIFlash_ReadEnd))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
</UL>

<P><STRONG><a name="[13c]"></a>SPIFlash_ReadStart</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, spiflash.o(i.SPIFlash_ReadStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPIFlash_ReadStart &rArr; SPIFlash_3ByteAddr_Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_3ByteAddr_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
</UL>

<P><STRONG><a name="[139]"></a>SPIFlash_SendRecOneData</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, spiflash.o(i.SPIFlash_SendRecOneData))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SPIFlash_SendRecOneData
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_PowerDown
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_GetChipInfo
</UL>

<P><STRONG><a name="[125]"></a>SPI_Close</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, spi.o(i.SPI_Close))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Enter
</UL>

<P><STRONG><a name="[140]"></a>SPI_GetBusClock</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, spi.o(i.SPI_GetBusClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_GetBusClock &rArr; CLK_GetHCLKFreq &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetHCLKFreq
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Open
</UL>

<P><STRONG><a name="[13b]"></a>SPI_Open</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, spi.o(i.SPI_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SPI_Open &rArr; SPI_SetVarClock &rArr; CLK_GetHCLKFreq &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SetVarClock
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SetBusClock
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetBusClock
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Open
</UL>

<P><STRONG><a name="[142]"></a>SPI_SetBusClock</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, spi.o(i.SPI_SetBusClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI_SetBusClock &rArr; CLK_GetHCLKFreq &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetHCLKFreq
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Open
</UL>

<P><STRONG><a name="[141]"></a>SPI_SetVarClock</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, spi.o(i.SPI_SetVarClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI_SetVarClock &rArr; CLK_GetHCLKFreq &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetHCLKFreq
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Open
</UL>

<P><STRONG><a name="[11d]"></a>SPK_ChangeSR</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, micspk.o(i.SPK_ChangeSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPK_ChangeSR &rArr; DPWM_SetSampleRate &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DPWM_SetSampleRate
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Remove
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Add
</UL>

<P><STRONG><a name="[126]"></a>SPK_Close</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, micspk.o(i.SPK_Close))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPK_Close
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_DisableModuleClock
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Stop
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Close
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Enter
</UL>

<P><STRONG><a name="[12a]"></a>SPK_Open</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, micspk.o(i.SPK_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SPK_Open &rArr; PdmaCtrl_Open &rArr; PDMA_SetTransferMode &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetModuleClock
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ResetModule
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Open
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DPWM_Open
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BIQFilter_Setting
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Exit
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[122]"></a>SPK_Start</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, micspk.o(i.SPK_Start))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StartPlay
</UL>

<P><STRONG><a name="[123]"></a>SPK_Stop</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, micspk.o(i.SPK_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StopPlay
</UL>

<P><STRONG><a name="[b7]"></a>SYS_Lock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sys.o(i.SYS_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetSysTickClockSrc
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_DisableLDO
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_DeepSleep
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreLoad_VRBin
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableLDO
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableXtalRC
</UL>

<P><STRONG><a name="[f7]"></a>SYS_ResetModule</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, sys.o(i.SYS_ResetModule))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Open
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Open
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Initiate
</UL>

<P><STRONG><a name="[b6]"></a>SYS_Unlock</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, sys.o(i.SYS_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetSysTickClockSrc
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_DisableLDO
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_DeepSleep
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreLoad_VRBin
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableLDO
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableXtalRC
</UL>

<P><STRONG><a name="[145]"></a>SysClk_InitiateRC</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, sysclk.o(i.SysClk_InitiateRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SysClk_InitiateRC &rArr; CLK_SetHCLK &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableXtalRC
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bc]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, system_n575.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DPWM_SetSampleRate
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetHCLKFreq
</UL>

<P><STRONG><a name="[146]"></a>TIMER_GetModuleClock</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, timer.o(i.TIMER_GetModuleClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIMER_GetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetWorkingFreq
</UL>

<P><STRONG><a name="[db]"></a>TIMER_GetWorkingFreq</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, timer.o(i.TIMER_GetWorkingFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIMER_GetWorkingFreq &rArr; TIMER_GetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetModuleClock
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Initiate
</UL>

<P><STRONG><a name="[da]"></a>TIMER_Open</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, timer.o(i.TIMER_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TIMER_Open &rArr; TIMER_GetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetModuleClock
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Initiate
</UL>

<P><STRONG><a name="[13]"></a>TMR0_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, interrupthandler.o(i.TMR0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TMR1_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, interrupthandler.o(i.TMR1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_TgrDecDebounceCounter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>UserEvent_ProcessCallback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, appcallback.o(i.UserEvent_ProcessCallback))
<BR>[Address Reference Count : 1]<UL><LI> appcallback.o(.constdata)
</UL>
<P><STRONG><a name="[52]"></a>VROneCmdApp_GetCMDID</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, vronecmdapp.o(i.VROneCmdApp_GetCMDID))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = VROneCmdApp_GetCMDID &rArr; CSpotter_AddSample &rArr; NINJA_API_13 &rArr; NINJA_API_11 &rArr; BsrAsa &rArr; BsrCara &rArr; BsrBret
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_GetResult
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_AddSample
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Process
</UL>

<P><STRONG><a name="[5a]"></a>VROneCmdApp_Initiate</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, vronecmdapp.o(i.VROneCmdApp_Initiate))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = VROneCmdApp_Initiate &rArr; CSpotter_Init_Sep &rArr; CSpotter_Init_Multi &rArr; NINJA_API_9 &rArr; BsrRay &rArr; BsrDina &rArr; BsrJami &rArr; BsrJose
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_Reset
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_Init_Sep
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_GetMemoryUsage_Sep
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StartRecognize
</UL>

<P><STRONG><a name="[47]"></a>VROneCmdApp_UnpackBin</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, vronecmdapp.o(i.VROneCmdApp_UnpackBin))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = VROneCmdApp_UnpackBin
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_KeyHandler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Initiate
</UL>

<P><STRONG><a name="[121]"></a>VolumeCtrl_Reset</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, volumectrl.o(i.VolumeCtrl_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = VolumeCtrl_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_ResetChannelVolume
</UL>

<P><STRONG><a name="[11f]"></a>VolumeCtrl_VolumeFade</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, volumectrl.o(i.VolumeCtrl_VolumeFade))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Process
</UL>

<P><STRONG><a name="[c]"></a>WDT_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupthandler.o(i.WDT_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[ef]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, md4decode.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_SetTransferMode
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4_DecodeProcess
</UL>

<P><STRONG><a name="[2f]"></a>main</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = main &rArr; App_Initiate &rArr; App_StartRecognize &rArr; VROneCmdApp_Initiate &rArr; CSpotter_Init_Sep &rArr; CSpotter_Init_Multi &rArr; NINJA_API_9 &rArr; BsrRay &rArr; BsrDina &rArr; BsrJami &rArr; BsrJose
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysClk_InitiateRC
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Open
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputPin_Set
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputPin_Initiate
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Open
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_ScanTgr
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Initiate
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableLDO
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Process
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Initiate
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Initiate
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[127]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, powerdown.o(i.NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_GPIOPostProc
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Enter
</UL>

<P><STRONG><a name="[130]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, powerdown.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_GPIOPreProc
</UL>

<P><STRONG><a name="[12]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_n575_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n575_keil.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>BIQFilter_Setting</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, micspk.o(i.BIQFilter_Setting))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BIQFilter_Setting &rArr; BIQ_SetCoeff
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BIQ_SetCoeff
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BIQ_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Open
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Open
</UL>

<P><STRONG><a name="[113]"></a>NVIC_ClearPendingIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pdmactrl.o(i.NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_UnInit
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Init
</UL>

<P><STRONG><a name="[ee]"></a>MD4_CheckResLdr</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, md4decode.o(i.MD4_CheckResLdr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MD4_CheckResLdr
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4_DecodeProcess
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4_DecodeFrame
</UL>

<P><STRONG><a name="[ed]"></a>MD4_DecodeFrame</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, md4decode.o(i.MD4_DecodeFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MD4_DecodeFrame &rArr; MD4_CheckResLdr
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4_CheckResLdr
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD4_DecodeProcess
</UL>

<P><STRONG><a name="[c9]"></a>BsrLuke</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, cspottersdkapi.o(i.BsrLuke))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpotter_Init_Multi
</UL>

<P><STRONG><a name="[a4]"></a>BsrJoel</STRONG> (Thumb, 274 bytes, Stack size 56 bytes, bsrgo.o(i.BsrJoel))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BsrJoel &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_11
</UL>

<P><STRONG><a name="[a5]"></a>BsrJoey</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, bsrgo.o(i.BsrJoey))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BsrJoey
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NINJA_API_13
</UL>

<P><STRONG><a name="[a7]"></a>BsrMegan</STRONG> (Thumb, 344 bytes, Stack size 48 bytes, bsrjim.o(i.BsrMegan))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BsrMegan &rArr; BsrAbel
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAbel
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrMichael
</UL>

<P><STRONG><a name="[aa]"></a>BsrMelissa</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, bsrjim.o(i.BsrMelissa))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BsrMelissa
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrMichael
</UL>

<P><STRONG><a name="[9f]"></a>BsrJess</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, bsrkai.o(i.BsrJess))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = BsrJess &rArr; BsrDemi &rArr; BsrJake &rArr;  BsrJake (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDemi
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDeja
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAdam
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAbel
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJose
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrRon
</UL>

<P><STRONG><a name="[a1]"></a>BsrJill</STRONG> (Thumb, 198 bytes, Stack size 56 bytes, bsrkai.o(i.BsrJill))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BsrJill &rArr; BsrJoan &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJodi
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJoan
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAdam
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrAbel
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrRon
</UL>

<P><STRONG><a name="[a2]"></a>BsrJoan</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, bsrkai.o(i.BsrJoan))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = BsrJoan &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJill
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrTre
</UL>

<P><STRONG><a name="[a3]"></a>BsrJodi</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, bsrkai.o(i.BsrJodi))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BsrJodi &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJill
</UL>

<P><STRONG><a name="[b2]"></a>BsrJody</STRONG> (Thumb, 132 bytes, Stack size 20 bytes, bsrkai.o(i.BsrJody))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BsrJody
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrRon
</UL>

<P><STRONG><a name="[a8]"></a>BsrMia</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bsrkai.o(i.BsrMia))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = BsrMia &rArr; BsrCoty &rArr; BsrAdam
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrCoty
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrRay
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrNia
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrMya
</UL>

<P><STRONG><a name="[9d]"></a>BsrJuanita</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, bsreva.o(i.BsrJuanita))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BsrJuanita
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrElsa
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrElla
</UL>

<P><STRONG><a name="[9c]"></a>BsrJuanitez</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, bsreva.o(i.BsrJuanitez))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BsrJuanitez
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrElsa
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrElla
</UL>

<P><STRONG><a name="[82]"></a>BsrJana</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, bsrjay.o(i.BsrJana))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BsrJana &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrClay
</UL>

<P><STRONG><a name="[83]"></a>BsrJane</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bsrjay.o(i.BsrJane))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BsrJane &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrClay
</UL>

<P><STRONG><a name="[81]"></a>BsrJean</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, bsrjay.o(i.BsrJean))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BsrJean &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrClay
</UL>

<P><STRONG><a name="[80]"></a>BsrJena</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, bsrjay.o(i.BsrJena))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrClay
</UL>

<P><STRONG><a name="[86]"></a>BsrJade</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, bsrjoy.o(i.BsrJade))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BsrJade
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDion
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrCory
</UL>

<P><STRONG><a name="[8b]"></a>BsrJake</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bsrjoy.o(i.BsrJake))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = BsrJake &rArr;  BsrJake (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJake
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJake
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDemi
</UL>

<P><STRONG><a name="[8e]"></a>BsrJami</STRONG> (Thumb, 106 bytes, Stack size 72 bytes, bsrjoy.o(i.BsrJami))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BsrJami &rArr; BsrJose
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrJose
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDina
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrDeon
</UL>

<P><STRONG><a name="[9e]"></a>BsrIvan</STRONG> (Thumb, 106 bytes, Stack size 20 bytes, bsrann.o(i.BsrIvan))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BsrIvan
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BsrGreg
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[3d]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
